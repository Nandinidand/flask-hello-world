name: CI/CD - Flask Hello World

on:
  push:
    branches: [ "main" ]

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
    # ===== CHECKOUT REPO =====
    - name: Checkout repository
      uses: actions/checkout@v3

    # ===== SETUP PYTHON =====
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    # ===== INSTALL DEPENDENCIES =====
    - name: Install dependencies
      run: pip install -r requirements.txt

    # ===== RUN TESTS (Optional) =====
    - name: Run test
      run: echo "Flask app built successfully"

    # ===== BUILD DOCKER IMAGE =====
    - name: Build Docker image
      run: docker build -t flask-hello-world:latest .

    # ===== SAVE IMAGE TO TAR FILE =====
    - name: Save Docker image
      run: docker save flask-hello-world:latest -o flask-hello-world.tar

    # ===== COPY IMAGE TO EC2 =====
    - name: Upload image to EC2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        source: "flask-hello-world.tar"
        target: "/tmp/flask-hello-world.tar"

    # ===== LOAD + RUN CONTAINER ON EC2 =====
    - name: Deploy on EC2
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        script: |
          echo "Loading Docker image..."
          docker load -i /tmp/flask-hello-world.tar
          echo "Stopping old container..."
          docker stop flask-hello-world || true
          docker rm flask-hello-world || true
          echo "Starting new container..."
          docker run -d -p 80:5000 --name flask-hello-world flask-hello-world:latest
          echo "âœ… Deployment completed successfully!"
